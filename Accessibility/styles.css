body {
  background: #f5f6f7;
  color: #1b1b32;
  font-family: Helvetica;
  margin: 0;
}

/* The max() function uses the largest value, from a comma-separated list of values, as the property value. */
#logo {
  width: max(10rem, 18vw);
  background-color: #0a0a23;

  /* the logo should retain an aspect ratio of 35 / 4, and have padding around the text */
  /* The aspect-ratio property allows you to define the ratio between width and height of an element. */
  aspect-ratio: 35/4;
  padding: 0.4rem;
}

header {
  width: 100%;
  background-color: #1b1b32;
  height: 50px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  position: fixed;
  top: 0;
}

h1 {
  color: #f1be32;
  font-size: min(5vw, 1.2em);
  text-align: center;
}

main {
  padding-top: 40px;
}

/* Child Selector (>) -> Selects direct child elements of a specified element. */
nav > ul {
  display: flex;
  flex-wrap: wrap;
  justify-content: space-evenly;

  /* The padding-inline-start property in CSS sets the padding on the logical inline start side of an element, which means it adjusts padding relative to the starting side of the inline axis. The inline axis is usually horizontal, running from left to right in left-to-right languages (like English) and right to left in right-to-left languages (like Arabic). */
  /* Logical Properties: Unlike padding-left and padding-right, which are physical properties, padding-inline-start is a logical property. It respects the writing mode and direction of the text.
  Writing Modes: In left-to-right writing mode, padding-inline-start behaves like padding-left. In right-to-left writing mode, it behaves like padding-right.
  Responsiveness: It helps create more responsive designs that automatically adjust to the text direction without needing separate styles for different writing modes. */
  align-items: center;
  padding-inline-start: 0;
  margin-block: 0; /* logical margin block */
  height: 100%;
}

h1,
h2 {
  font-family: Verdana, sans-serif;
}

h2 {
  border-bottom: 4px solid #dfdfe2;
  margin-top: 0;
  padding-top: 60px;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

p::before {
  content: "Question #";
}

nav > ul > li {
  color: #dfdfe2;
  margin: 0 0.2rem;
  padding: 0.2rem;
  display: block;
}

/* contrast ratio */
nav ul li a {
  color: #f1f1f1; /* Very light gray for high contrast */
}

li > a {
  color: inherit;
  text-decoration: none;
}

nav > ul > li:hover {
  cursor: pointer;
  color: #1b1b32; /* Very light gray for high contrast */
  background-color: #dfdfe2;
}

section {
  width: 80%;
  max-width: 600px;
  margin: 0 auto 10px auto;
}

.info {
  padding: 10px 0 0 10px;
}

.formrow {
  margin-top: 10px;
  padding: 0 10px 0 10px;
}

input {
  font-size: 16px;
}

.info input {
  width: 50%;
  text-align: left;
}

.info label {
  width: 10%;
  min-width: 55px;
}
