html {
  box-sizing: border-box;
}

body {
  font-family: sans-serif;
  color: #0a0a23;
}

/* The ~= (tilde equals) attribute selector is used to select elements with an attribute value that contains a specified word, delimited by whitespace. This is particularly useful for matching individual class names in a space-separated list of class values. */
span[class~="sr-only"] {
  border: 0 !important;

	/* deprecated */
	/* clip: rect(1px, 1px, 1px, 1px); */

	/* hides the element */
	clip-path: inset(50%) !important;

	width: 1px !important;
	height: 1px !important;
	overflow: hidden !important;
	white-space: nowrap !important;
	position: absolute !important;
	padding: 0 !important;
	margin: -1px !important;
}

h1 {
	max-width: 37.25rem;
	margin: 0 auto;
	padding: 1.5rem 1.25rem;
}

h1 .flex {
	display: flex;
	flex-direction: column-reverse;
	gap: 1rem;
}

/* The :first-of-type pseudo-selector is used to target the first element that matches the selector. */
h1 .flex span:first-of-type {
	font-size: 0.7em;
}

h1 .flex span:last-of-type {
	font-size: 1.2em;
}

section {
	max-width: 40rem;
	margin: 0 auto;
	border: 2px solid #d0d0d5;
}

#years {
	display: flex;
	justify-content: flex-end;
	position: sticky; 
	top: 0;
	color: #ffffff;
	background-color: #0a0a23;

	/* The calc() function takes a single expression as its parameter, and the expression's result is used as the value for a CSS property */
	margin: 0 -2px;
	padding: 0.5rem calc(1.25rem + 2px) 0.5rem 0;

	z-index: 999;
}

/* The span[class] syntax will target any span element that has a class attribute set, regardless of the attribute's value. */
#years span[class] {
	font-weight: bold;
	width: 4.5rem;
	text-align: right;
}

.table-wrap {
	padding: 0 0.75rem 1.5rem 0.75rem;
}

/* The :not() pseudo-selector is used to target all elements that do not match the selector - in this case, any of your span elements that do not have the sr-only class */
/* span:not(.sr-only) { */
/* span {
	font-weight: normal;
} */

table {
	/* allow cell borders to collapse into a single border, instead of a border around each cell */
	border-collapse: collapse;
	border: 0;
	width: 100%;
	position: relative;
	margin-top: 3rem;
}

table caption {
	color: #356eaf;
	font-size: 1.3em;
	font-weight: normal;
	position: absolute;
	top: -2.25rem;
	left: 0.5rem;
}

tbody td {
	/* This approach ensures that the width is fixed, whereas setting width specifically would allow the elements to shrink to the container. */
	width: 100vw;
	min-width: 4rem;
	max-width: 4rem;
}

/* width of the entire container, less 12rem */
tbody th {
	width: calc(100% - 12rem);
}

/* [attribute="value"] selector targets any element that has an attribute with a specific value */
tr[class="total"] {
	border: 4px double #0a0a23;
	font-weight: bold;
}

tr[class="total"] th {
	text-align: left;
	padding: 0.5rem 0 0.25rem 0.5rem;
}

/* The key difference between tr[class="total"] and tr.total is that the first will select tr elements where the only class is total. The second will select tr elements where the class includes total. */
tr.total td {
	text-align: right;
	padding: 0 0.25rem;
}

/* The :nth-of-type() pseudo-selector is used to target specific elements based on their order among siblings of the same type. */
tr.total td:nth-of-type(3) {
	padding-right: 0.5rem;
}

tr.total:hover {
	background-color: #99c9ff;
}

td.current {
	font-style: italic;
}

tr[class="data"] {
	background-image: linear-gradient(to bottom, #dfdfe2 1.845rem, white 1.845rem);
}

tr.data th {
	text-align: left;
	padding-top: 0.3rem;
	padding-left: 0.5rem;
}

tr.data th .description {
	display: block;
	font-style: italic;
	font-weight: normal;
	padding: 1rem 0 0.75rem;
	margin: -13.5rem;
}

tr.data td {
	vertical-align: top;
	text-align: right;
	padding: 0.3rem 0.25rem 0;
}

